// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "03/02/2025 17:55:56"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module ALU (
	a,
	b,
	Cin,
	Sel,
	Result,
	Cout);
input 	a;
input 	b;
input 	Cin;
input 	[1:0] Sel;
output 	Result;
output 	Cout;

// Design Ports Information
// Result	=>  Location: PIN_D2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Cout	=>  Location: PIN_G5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a	=>  Location: PIN_C2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// b	=>  Location: PIN_D1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Sel[0]	=>  Location: PIN_H7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Sel[1]	=>  Location: PIN_G6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Cin	=>  Location: PIN_F3,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Result~output_o ;
wire \Cout~output_o ;
wire \Sel[1]~input_o ;
wire \Sel[0]~input_o ;
wire \Cin~input_o ;
wire \b~input_o ;
wire \a~input_o ;
wire \U5|Mux0~0_combout ;
wire \U5|Mux0~1_combout ;
wire \U4|adder_outC~0_combout ;


// Location: IOOBUF_X0_Y68_N2
cycloneive_io_obuf \Result~output (
	.i(\U5|Mux0~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Result~output_o ),
	.obar());
// synopsys translate_off
defparam \Result~output .bus_hold = "false";
defparam \Result~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y67_N23
cycloneive_io_obuf \Cout~output (
	.i(\U4|adder_outC~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Cout~output_o ),
	.obar());
// synopsys translate_off
defparam \Cout~output .bus_hold = "false";
defparam \Cout~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y67_N15
cycloneive_io_ibuf \Sel[1]~input (
	.i(Sel[1]),
	.ibar(gnd),
	.o(\Sel[1]~input_o ));
// synopsys translate_off
defparam \Sel[1]~input .bus_hold = "false";
defparam \Sel[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y68_N15
cycloneive_io_ibuf \Sel[0]~input (
	.i(Sel[0]),
	.ibar(gnd),
	.o(\Sel[0]~input_o ));
// synopsys translate_off
defparam \Sel[0]~input .bus_hold = "false";
defparam \Sel[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y66_N22
cycloneive_io_ibuf \Cin~input (
	.i(Cin),
	.ibar(gnd),
	.o(\Cin~input_o ));
// synopsys translate_off
defparam \Cin~input .bus_hold = "false";
defparam \Cin~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y68_N8
cycloneive_io_ibuf \b~input (
	.i(b),
	.ibar(gnd),
	.o(\b~input_o ));
// synopsys translate_off
defparam \b~input .bus_hold = "false";
defparam \b~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y69_N8
cycloneive_io_ibuf \a~input (
	.i(a),
	.ibar(gnd),
	.o(\a~input_o ));
// synopsys translate_off
defparam \a~input .bus_hold = "false";
defparam \a~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y68_N2
cycloneive_lcell_comb \U5|Mux0~0 (
// Equation(s):
// \U5|Mux0~0_combout  = (\b~input_o  & ((\Sel[1]~input_o  & ((!\a~input_o ))) # (!\Sel[1]~input_o  & ((\Sel[0]~input_o ) # (\a~input_o ))))) # (!\b~input_o  & ((\Sel[0]~input_o  & ((\a~input_o ))) # (!\Sel[0]~input_o  & (\Sel[1]~input_o ))))

	.dataa(\b~input_o ),
	.datab(\Sel[0]~input_o ),
	.datac(\Sel[1]~input_o ),
	.datad(\a~input_o ),
	.cin(gnd),
	.combout(\U5|Mux0~0_combout ),
	.cout());
// synopsys translate_off
defparam \U5|Mux0~0 .lut_mask = 16'h5EB8;
defparam \U5|Mux0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y68_N4
cycloneive_lcell_comb \U5|Mux0~1 (
// Equation(s):
// \U5|Mux0~1_combout  = \U5|Mux0~0_combout  $ (((\Sel[1]~input_o  & (\Sel[0]~input_o  & \Cin~input_o ))))

	.dataa(\Sel[1]~input_o ),
	.datab(\Sel[0]~input_o ),
	.datac(\Cin~input_o ),
	.datad(\U5|Mux0~0_combout ),
	.cin(gnd),
	.combout(\U5|Mux0~1_combout ),
	.cout());
// synopsys translate_off
defparam \U5|Mux0~1 .lut_mask = 16'h7F80;
defparam \U5|Mux0~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y68_N8
cycloneive_lcell_comb \U4|adder_outC~0 (
// Equation(s):
// \U4|adder_outC~0_combout  = (\b~input_o  & ((\Cin~input_o ) # (\a~input_o ))) # (!\b~input_o  & (\Cin~input_o  & \a~input_o ))

	.dataa(\b~input_o ),
	.datab(gnd),
	.datac(\Cin~input_o ),
	.datad(\a~input_o ),
	.cin(gnd),
	.combout(\U4|adder_outC~0_combout ),
	.cout());
// synopsys translate_off
defparam \U4|adder_outC~0 .lut_mask = 16'hFAA0;
defparam \U4|adder_outC~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign Result = \Result~output_o ;

assign Cout = \Cout~output_o ;

endmodule
