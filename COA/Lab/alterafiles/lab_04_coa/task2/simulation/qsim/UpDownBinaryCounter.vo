// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "03/07/2025 13:32:25"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module UpDownBinaryCounter (
	binOut,
	opcode,
	clk);
output 	[2:0] binOut;
input 	opcode;
input 	clk;

// Design Ports Information
// binOut[0]	=>  Location: PIN_L2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// binOut[1]	=>  Location: PIN_M1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// binOut[2]	=>  Location: PIN_L1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// opcode	=>  Location: PIN_M2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk	=>  Location: PIN_J1,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \binOut[0]~output_o ;
wire \binOut[1]~output_o ;
wire \binOut[2]~output_o ;
wire \clk~input_o ;
wire \clk~inputclkctrl_outclk ;
wire \U1|Q_not~0_combout ;
wire \U1|Q_not~q ;
wire \opcode~input_o ;
wire \U2|Q~feeder_combout ;
wire \U2|Q~q ;
wire \d1~0_combout ;
wire \U3|Q~0_combout ;
wire \U3|Q~q ;
wire \U2|Q_not~0_combout ;
wire \U2|Q_not~q ;
wire \d2~0_combout ;
wire \d2~1_combout ;


// Location: IOOBUF_X0_Y44_N2
cycloneive_io_obuf \binOut[0]~output (
	.i(\U1|Q_not~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\binOut[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \binOut[0]~output .bus_hold = "false";
defparam \binOut[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y44_N23
cycloneive_io_obuf \binOut[1]~output (
	.i(\d1~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\binOut[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \binOut[1]~output .bus_hold = "false";
defparam \binOut[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y44_N9
cycloneive_io_obuf \binOut[2]~output (
	.i(!\d2~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\binOut[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \binOut[2]~output .bus_hold = "false";
defparam \binOut[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y36_N8
cycloneive_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G2
cycloneive_clkctrl \clk~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clk~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clk~inputclkctrl_outclk ));
// synopsys translate_off
defparam \clk~inputclkctrl .clock_type = "global clock";
defparam \clk~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: LCCOMB_X1_Y44_N8
cycloneive_lcell_comb \U1|Q_not~0 (
// Equation(s):
// \U1|Q_not~0_combout  = !\U1|Q_not~q 

	.dataa(gnd),
	.datab(gnd),
	.datac(\U1|Q_not~q ),
	.datad(gnd),
	.cin(gnd),
	.combout(\U1|Q_not~0_combout ),
	.cout());
// synopsys translate_off
defparam \U1|Q_not~0 .lut_mask = 16'h0F0F;
defparam \U1|Q_not~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y44_N9
dffeas \U1|Q_not (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\U1|Q_not~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\U1|Q_not~q ),
	.prn(vcc));
// synopsys translate_off
defparam \U1|Q_not .is_wysiwyg = "true";
defparam \U1|Q_not .power_up = "low";
// synopsys translate_on

// Location: IOIBUF_X0_Y44_N15
cycloneive_io_ibuf \opcode~input (
	.i(opcode),
	.ibar(gnd),
	.o(\opcode~input_o ));
// synopsys translate_off
defparam \opcode~input .bus_hold = "false";
defparam \opcode~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y44_N26
cycloneive_lcell_comb \U2|Q~feeder (
// Equation(s):
// \U2|Q~feeder_combout  = \d1~0_combout 

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(\d1~0_combout ),
	.cin(gnd),
	.combout(\U2|Q~feeder_combout ),
	.cout());
// synopsys translate_off
defparam \U2|Q~feeder .lut_mask = 16'hFF00;
defparam \U2|Q~feeder .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y44_N27
dffeas \U2|Q (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\U2|Q~feeder_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\U2|Q~q ),
	.prn(vcc));
// synopsys translate_off
defparam \U2|Q .is_wysiwyg = "true";
defparam \U2|Q .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y44_N24
cycloneive_lcell_comb \d1~0 (
// Equation(s):
// \d1~0_combout  = \opcode~input_o  $ (\U1|Q_not~q  $ (!\U2|Q~q ))

	.dataa(\opcode~input_o ),
	.datab(gnd),
	.datac(\U1|Q_not~q ),
	.datad(\U2|Q~q ),
	.cin(gnd),
	.combout(\d1~0_combout ),
	.cout());
// synopsys translate_off
defparam \d1~0 .lut_mask = 16'h5AA5;
defparam \d1~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y44_N30
cycloneive_lcell_comb \U3|Q~0 (
// Equation(s):
// \U3|Q~0_combout  = !\d2~1_combout 

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(\d2~1_combout ),
	.cin(gnd),
	.combout(\U3|Q~0_combout ),
	.cout());
// synopsys translate_off
defparam \U3|Q~0 .lut_mask = 16'h00FF;
defparam \U3|Q~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y44_N31
dffeas \U3|Q (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\U3|Q~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\U3|Q~q ),
	.prn(vcc));
// synopsys translate_off
defparam \U3|Q .is_wysiwyg = "true";
defparam \U3|Q .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y44_N16
cycloneive_lcell_comb \U2|Q_not~0 (
// Equation(s):
// \U2|Q_not~0_combout  = !\d1~0_combout 

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(\d1~0_combout ),
	.cin(gnd),
	.combout(\U2|Q_not~0_combout ),
	.cout());
// synopsys translate_off
defparam \U2|Q_not~0 .lut_mask = 16'h00FF;
defparam \U2|Q_not~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y44_N17
dffeas \U2|Q_not (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\U2|Q_not~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\U2|Q_not~q ),
	.prn(vcc));
// synopsys translate_off
defparam \U2|Q_not .is_wysiwyg = "true";
defparam \U2|Q_not .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y44_N18
cycloneive_lcell_comb \d2~0 (
// Equation(s):
// \d2~0_combout  = (\opcode~input_o  & (((!\U2|Q_not~q )) # (!\U1|Q_not~q ))) # (!\opcode~input_o  & ((\U1|Q_not~q ) # ((!\U2|Q~q ))))

	.dataa(\opcode~input_o ),
	.datab(\U1|Q_not~q ),
	.datac(\U2|Q~q ),
	.datad(\U2|Q_not~q ),
	.cin(gnd),
	.combout(\d2~0_combout ),
	.cout());
// synopsys translate_off
defparam \d2~0 .lut_mask = 16'h67EF;
defparam \d2~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y44_N28
cycloneive_lcell_comb \d2~1 (
// Equation(s):
// \d2~1_combout  = \U3|Q~q  $ (\d2~0_combout )

	.dataa(gnd),
	.datab(gnd),
	.datac(\U3|Q~q ),
	.datad(\d2~0_combout ),
	.cin(gnd),
	.combout(\d2~1_combout ),
	.cout());
// synopsys translate_off
defparam \d2~1 .lut_mask = 16'h0FF0;
defparam \d2~1 .sum_lutc_input = "datac";
// synopsys translate_on

assign binOut[0] = \binOut[0]~output_o ;

assign binOut[1] = \binOut[1]~output_o ;

assign binOut[2] = \binOut[2]~output_o ;

endmodule
